diff --git a/CMakeLists.txt b/CMakeLists.txt
index 9b057311..37e96a96 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1471,6 +1471,7 @@ ENDIF()
 
 # Enable Parallel IO with netCDF-4/HDF5 files using HDF5 parallel I/O.
 SET(STATUS_PARALLEL "OFF")
+set(IMPORT_MPI "")
 OPTION(ENABLE_PARALLEL4 "Build netCDF-4 with parallel IO" "${HDF5_PARALLEL}")
 IF(ENABLE_PARALLEL4 AND ENABLE_HDF5)
   IF(NOT HDF5_PARALLEL)
@@ -1492,6 +1493,7 @@ IF(ENABLE_PARALLEL4 AND ENABLE_HDF5)
     FILE(COPY "${netCDF_BINARY_DIR}/tmp/run_par_tests.sh"
       DESTINATION ${netCDF_BINARY_DIR}/h5_test
       FILE_PERMISSIONS OWNER_READ OWNER_WRITE OWNER_EXECUTE GROUP_READ GROUP_EXECUTE WORLD_READ WORLD_EXECUTE)
+    set(IMPORT_MPI "include(CMakeFindDependencyMacro)\nfind_dependency(mpi COMPONENTS C)")
   ENDIF()
 ENDIF()
 
diff --git a/liblib/CMakeLists.txt b/liblib/CMakeLists.txt
index e3eddc0f..0493cb9d 100644
--- a/liblib/CMakeLists.txt
+++ b/liblib/CMakeLists.txt
@@ -50,6 +50,7 @@ ADD_LIBRARY(netcdf nc_initialize.c ${LARGS} )
 
 IF(MPI_C_INCLUDE_PATH)
     target_include_directories(netcdf PUBLIC ${MPI_C_INCLUDE_PATH})
+    target_link_libraries(netcdf MPI::MPI_C)
 ENDIF(MPI_C_INCLUDE_PATH)
 
 IF(MOD_NETCDF_NAME)
diff --git a/netCDFConfig.cmake.in b/netCDFConfig.cmake.in
index 9d68eec5..dae2429e 100644
--- a/netCDFConfig.cmake.in
+++ b/netCDFConfig.cmake.in
@@ -14,6 +14,8 @@ set(netCDF_LIBRARIES netCDF::netcdf)
 # include target information
 include("${CMAKE_CURRENT_LIST_DIR}/netCDFTargets.cmake")
 
+@IMPORT_MPI@
+
 # Compiling Options
 #
 set(netCDF_C_COMPILER "@CC_VERSION@")
diff --git a/plugins/CMakeLists.txt b/plugins/CMakeLists.txt
index 65891d82..15567c8f 100644
--- a/plugins/CMakeLists.txt
+++ b/plugins/CMakeLists.txt
@@ -62,6 +62,9 @@ MACRO(buildplugin TARGET TARGETLIB)
     set_target_properties(${TARGET} PROPERTIES LINK_FLAGS "/INCREMENTAL:NO /DEBUG /OPT:REF /OPT:ICF")
     # Set file name & location
     set_target_properties(${TARGET} PROPERTIES COMPILE_PDB_NAME ${TARGET} COMPILE_PDB_OUTPUT_DIR ${CMAKE_BINARY_DIR})
+    IF(MPI_C_INCLUDE_PATH)
+      target_include_directories(${TARGET} PRIVATE ${MPI_C_INCLUDE_PATH})
+    ENDIF(MPI_C_INCLUDE_PATH)
   ENDIF()
 ENDMACRO()
 
